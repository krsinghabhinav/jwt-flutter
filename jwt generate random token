import 'package:dart_jsonwebtoken/dart_jsonwebtoken.dart';

class AuthSigner {
  final String _issuer = "com.hostelpedia";
  final int _expirationTime = 3600; // expires after 3600 sec
  final String _secretKey =
      "Hostel@2024@@@Pedia"; // Replace this with your actual secret key

  String createJwt() {
    // Get current time in seconds
    final int currentTime =
        (DateTime.now().millisecondsSinceEpoch / 1000).floor();

    // Create a JWT signer with the secret key using HS256 algorithm
    final jwt = JWT({
      'iat': currentTime, // Issued at time
      'exp': currentTime + _expirationTime, // Expiration time
    }, issuer: _issuer);

    // Sign the JWT and return it
    final token = jwt.sign(SecretKey(_secretKey),
        expiresIn: Duration(seconds: _expirationTime));

    return token;
  }
}

void main() {
  final authSigner = AuthSigner();
  final jwt = authSigner.createJwt();

  print('Generated JWT: $jwt');
}
===============================================

api ----------------------------    

gteApi// /////////////////

//getApi
  Future<dynamic> getApi(
      {required String url, required String jwtToken}) async {
    try {
      final apirespnse = await http.get(
        Uri.parse(url),
        headers: {
          'Content-Type': 'application/json',
          'Authorization':
              'Bearer $jwtToken', // Add JWT token in the Authorization header
        },
      );
      printvalue(url, tag: "Api Get url: ");
      printvalue(jwtToken, tag: "Api Header: ");
      printvalue(apirespnse.body, tag: "Api Response");
      return _returenResponse(apirespnse);
    } on SocketException {
      return null;
    }
  }

  /////////////////////////////////////////////////////////////////

import 'package:dart_jsonwebtoken/dart_jsonwebtoken.dart';

class AuthSigner {
  final String _issuer = "com.hostelpedia";
  final int _expirationTime = 3600; // expires after 3600 sec
  final String _secretKey = "your-secret-key"; // Replace this with your actual secret key

  String createJwt() {
    // Get current time in seconds
    final int currentTime = (DateTime.now().millisecondsSinceEpoch / 1000).floor();

    // Create a JWT signer with the secret key using HS256 algorithm
    final jwt = JWT({
      'iat': currentTime, // Issued at time
      'exp': currentTime + _expirationTime, // Expiration time
    }, issuer: _issuer);

    // Sign the JWT and return it
    final token = jwt.sign(SecretKey(_secretKey), expiresIn: Duration(seconds: _expirationTime));

    return token;
  }
}

void main() {
  final authSigner = AuthSigner();
  final jwt = authSigner.createJwt();

  print('Generated JWT: $jwt');
}


///////////////////////////////////////////////////////////////////////
dependencies:
  http: ^0.13.5  # Use the latest version
  dart_jsonwebtoken: ^3.0.1  # For JWT if you're generating it locally

////////////////////////////////////
import 'dart:convert';
import 'package:http/http.dart' as http;

class ApiService {
  final String baseUrl = "https://example.com/api";  // Replace with your API URL

  // Example function to make a GET request with JWT token
  Future<void> getData(String jwtToken) async {
    final String apiUrl = "$baseUrl/data";

    try {
      // Make a GET request and include JWT in the Authorization header
      final response = await http.get(
        Uri.parse(apiUrl),
        headers: {
          'Content-Type': 'application/json',
          'Authorization': 'Bearer $jwtToken',  // Add JWT token in the Authorization header
        },
      );

      if (response.statusCode == 200) {
        // Parse the response if needed
        final data = json.decode(response.body);
        print("Data fetched successfully: $data");
      } else {
        print("Failed to fetch data: ${response.statusCode}");
      }
    } catch (e) {
      print("Error occurred: $e");
    }
  }

  // Example function to make a POST request with JWT token
  Future<void> postData(String jwtToken, Map<String, dynamic> body) async {
    final String apiUrl = "$baseUrl/data";

    try {
      final response = await http.post(
        Uri.parse(apiUrl),
        headers: {
          'Content-Type': 'application/json',
          'Authorization': 'Bearer $jwtToken',
        },
        body: json.encode(body),
      );

      if (response.statusCode == 200 || response.statusCode == 201) {
        print("Data posted successfully");
      } else {
        print("Failed to post data: ${response.statusCode}");
      }
    } catch (e) {
      print("Error occurred: $e");
    }
  }
}

///////////////////////////////////////////

void main() async {
  final apiService = ApiService();
  
  // Replace with the actual JWT token or generate one
  String jwtToken = AuthSigner().createJwt();

  // Make a GET request with JWT token
  await apiService.getData(jwtToken);

  // Example of a POST request with JWT and some body data
  Map<String, dynamic> body = {
    'name': 'John Doe',
    'email': 'johndoe@example.com',
  };
  await apiService.postData(jwtToken, body);
}

